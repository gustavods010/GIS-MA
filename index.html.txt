<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map with Date Slider</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map { height: 500px; width: 100%; }
        #slider-container { margin-top: 10px; }
    </style>
</head>
<body>
    <div id="map"></div>
    <div id="slider-container">
        <input type="range" id="dateSlider" min="0" max="10" step="1">
        <span id="selectedDate">Select a date</span>
    </div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        var map = L.map('map').setView([YOUR_LAT, YOUR_LNG], 10);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        var lineLayer;
        var dates = [];
        var geojsonUrl = "YOUR_GEOJSON_URL_HERE"; // Replace with your hosted GeoJSON file

        fetch(geojsonUrl)
            .then(response => response.json())
            .then(data => {
                dates = [...new Set(data.features.map(f => f.properties.date))].sort();
                document.getElementById('dateSlider').max = dates.length - 1;
                updateMap(dates[0]);

                document.getElementById('dateSlider').addEventListener('input', function () {
                    var selectedDate = dates[this.value];
                    document.getElementById('selectedDate').textContent = selectedDate;
                    updateMap(selectedDate);
                });
            });

        function updateMap(selectedDate) {
            if (lineLayer) {
                map.removeLayer(lineLayer);
            }

            fetch(geojsonUrl)
                .then(response => response.json())
                .then(data => {
                    var filteredFeatures = data.features.filter(f => f.properties.date === selectedDate);
                    lineLayer = L.geoJSON(filteredFeatures, {
                        style: { color: 'blue', weight: 3 }
                    }).addTo(map);
                });
        }
    </script>
</body>
</html>
